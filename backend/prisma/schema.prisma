// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid()) // Унікальний ідентифікатор
  email        String  @unique
  password     String
  name         String?
  orders       Order[] // Відношення один-до-багатьох (користувач → замовлення)
  cart         Cart? // Виправлено "Cart" → "cart"
  refreshToken String?
}

model Product {
  id          String      @id @default(uuid())
  name        String
  description String?
  price       Float
  imageUrl    String?
  orderItems  OrderItem[] // Виправлено "orders" → "orderItems"
  cartItems   CartItem[] // Виправлено "CartItem" → "cartItems"
}

model Order {
  id        String      @id @default(uuid())
  user      User?       @relation(fields: [userId], references: [id])
  userId    String?
  items     OrderItem[]
  createdAt DateTime    @default(now())
}

model OrderItem {
  id        String  @id @default(uuid())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int     @default(1)
}

model Cart {
  id        String     @id @default(uuid())
  userId    String     @unique
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt // Додано
}

model CartItem {
  id        String  @id @default(uuid())
  cartId    String
  cart      Cart    @relation(fields: [cartId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int     @default(1)
}
